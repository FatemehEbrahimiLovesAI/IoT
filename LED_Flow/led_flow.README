# LED Animation & Control with Raspberry Pi Pico

This project demonstrates an interactive LED lighting system using a Raspberry Pi Pico. The setup includes 8 LEDs and 3 buttons. Depending on which button is pressed, different lighting effects are triggered. When no buttons are pressed, a default LED animation runs continuously.

## Features

- 3 buttons as user inputs
- 8 LEDs as visual outputs
- 3 LED Patterns:
  - Button 1: Turns off all LEDs
  - Button 2: Running light from right to left
  - Button 3: All LEDs blink together
- Default behavior: Smooth animation when no button is pressed

## Hardware Requirements

- Raspberry Pi Pico
- 8 LEDs
- 3 Push buttons
- Resistors (220Ω for each LED, optional 10kΩ pull-ups for buttons)
- Breadboard and jumper wires

## Pin Mapping

| Component | GPIO Pin |
|----------|-----------|
| LED 1    | 28        |
| LED 2    | 27        |
| LED 3    | 26        |
| LED 4    | 22        |
| LED 5    | 21        |
| LED 6    | 20        |
| LED 7    | 19        |
| LED 8    | 18        |
| Button 1 | 0         |
| Button 2 | 1         |
| Button 3 | 2         |

## Code Behavior

- Startup: All pins are initialized; LEDs are mapped in a dictionary for easier access.
- Loop: Continuously runs an LED animation and checks for button presses.
- Functionality:
  - st1(): Turns off all LEDs.
  - st2(): A light "runs" from LED 8 to LED 1 with delays.
  - st3(): All LEDs blink on and off.
  - ask(): Checks button status and calls the appropriate pattern.

## How to Use

1. Connect the LEDs and buttons according to the pin mapping.
2. Flash MicroPython firmware on your Pico.
3. Copy the Python script to the board.
4. Open Thonny or another MicroPython editor.
5. Run the script and interact using the buttons.
